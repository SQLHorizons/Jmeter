
Command
    az container create : Create a container group.

Arguments
    --resource-group -g   [Required] : Name of resource group. You can configure the default group
                                       using `az configure --defaults group=<name>`.
    --command-line                   : The command line to run when the container is started, e.g.
                                       '/bin/bash -c myscript.sh'.
    --cpu                            : The required number of CPU cores of the containers, accurate
                                       to one decimal place.  Default: 1.
    --dns-name-label                 : The dns name label for container group with public IP.
    --environment-variables -e       : A list of environment variable for the container. Space-
                                       separated values in 'key=value' format.
    --file -f                        : The path to the input file.
    --image                          : The container image name.
    --ip-address                     : The IP address type of the container group.  Allowed values:
                                       Private, Public.
    --location -l                    : Location. Values from: `az account list-locations`. You can
                                       configure the default location using `az configure --defaults
                                       location=<location>`.
    --memory                         : The required memory of the containers in GB, accurate to one
                                       decimal place.  Default: 1.5.
    --name -n                        : The name of the container group.
    --no-wait                        : Do not wait for the long-running operation to finish.
    --os-type                        : The OS type of the containers.  Allowed values: Linux,
                                       Windows.  Default: Linux.
    --ports                          : A list of ports to open. Space-separated list of ports.
                                       Default: [80].
    --protocol                       : The network protocol to use.  Allowed values: TCP, UDP.
    --restart-policy                 : Restart policy for all containers within the container group.
                                       Allowed values: Always, Never, OnFailure.  Default: Always.
    --secrets                        : Space-separated secrets in 'key=value' format.
    --secrets-mount-path             : The path within the container where the secrets volume should
                                       be mounted. Must not contain colon ':'.
    --secure-environment-variables   : A list of secure environment variable for the container.
                                       Space-separated values in 'key=value' format.

Azure File Volume Arguments
    --azure-file-volume-account-key  : The storage account access key used to access the Azure File
                                       share.
    --azure-file-volume-account-name : The name of the storage account that contains the Azure File
                                       share.
    --azure-file-volume-mount-path   : The path within the container where the azure file volume
                                       should be mounted. Must not contain colon ':'.
    --azure-file-volume-share-name   : The name of the Azure File share to be mounted as a volume.

Git Repo Volume Arguments
    --gitrepo-dir                    : The target directory path in the git repository. Must not
                                       contain '..'.  Default: ..
    --gitrepo-mount-path             : The path within the container where the git repo volume
                                       should be mounted. Must not contain colon ':'.
    --gitrepo-revision               : The commit hash for the specified revision.
    --gitrepo-url                    : The URL of a git repository to be mounted as a volume.

Image Registry Arguments
    --registry-login-server          : The container image registry login server.
    --registry-password              : The password to log in container image registry server.
    --registry-username              : The username to log in container image registry server.

Log Analytics Arguments
    --log-analytics-workspace        : The Log Analytics workspace name or id. Use the current
                                       subscription or use --subscription flag to set the desired
                                       subscription.
    --log-analytics-workspace-key    : The Log Analytics workspace key.

Managed Service Identity Arguments
    --assign-identity                : Space-separated list of assigned identities. Assigned
                                       identities are either user assigned identities (resource IDs)
                                       and / or the system assigned identity ('[system]'). See
                                       examples for more info.
    --role                           : Role name or id the system assigned identity will have.
                                       Default: Contributor.
    --scope                          : Scope that the system assigned identity can access.

Network Arguments
    --network-profile                : The network profile name or id.
    --subnet                         : The name of the subnet when creating a new VNET or
                                       referencing an existing one. Can also reference an existing
                                       subnet by ID.
    --subnet-address-prefix          : The subnet IP address prefix to use when creating a new VNET
                                       in CIDR format.  Default: 10.0.0.0/24.
    --vnet                           : The name of the VNET when creating a new one or referencing
                                       an existing one. Can also reference an existing vnet by ID.
                                       This allows using vnets from other resource groups.
    --vnet-address-prefix            : The IP address prefix to use when creating a new VNET in CIDR
                                       format.  Default: 10.0.0.0/16.

Global Arguments
    --debug                          : Increase logging verbosity to show all debug logs.
    --help -h                        : Show this help message and exit.
    --only-show-errors               : Only show errors, suppressing warnings.
    --output -o                      : Output format.  Allowed values: json, jsonc, none, table,
                                       tsv, yaml, yamlc.  Default: json.
    --query                          : JMESPath query string. See http://jmespath.org/ for more
                                       information and examples.
    --subscription                   : Name or ID of subscription. You can configure the default
                                       subscription using `az account set -s NAME_OR_ID`.
    --verbose                        : Increase logging verbosity. Use --debug for full debug logs.

Examples
    Create a container in a container group with 1 core and 1Gb of memory.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --cpu 1 --memory
        1

    Create a container in a container group that runs Windows, with 2 cores and 3.5Gb of memory.
        az container create -g MyResourceGroup --name mywinapp --image winappimage:latest --os-type
        Windows --cpu 2 --memory 3.5

    Create a container in a container group with public IP address, ports and DNS name label.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --ports 80 443
        --dns-name-label contoso

    Create a container in a container group that invokes a script upon start.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line
        "/bin/sh -c '/path to/myscript.sh'"

    Create a container in a container group that runs a command and stop the container afterwards.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line
        "echo hello" --restart-policy Never

    Create a container in a container group with environment variables.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --environment-
        variables key1=value1 key2=value2

    Create a container in a container group using container image from Azure Container Registry.
        az container create -g MyResourceGroup --name myapp --image
        myAcrRegistry.azurecr.io/myimage:latest --registry-password password

    Create a container in a container group that mounts an Azure File share as volume.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line
        "cat /mnt/azfile/myfile" --azure-file-volume-share-name myshare --azure-file-volume-account-
        name mystorageaccount --azure-file-volume-account-key mystoragekey --azure-file-volume-
        mount-path /mnt/azfile

    Create a container in a container group that mounts a git repo as volume.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --command-line
        "cat /mnt/gitrepo" --gitrepo-url https://github.com/user/myrepo.git --gitrepo-dir ./dir1
        --gitrepo-mount-path /mnt/gitrepo

    Create a container in a container group using a yaml file.
        az container create -g MyResourceGroup -f containerGroup.yaml

    Create a container group using Log Analytics from a workspace name.
        az container create -g MyResourceGroup --name myapp --log-analytics-workspace myworkspace

    Create a container group with a system assigned identity.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity

    Create a container group with a system assigned identity. The group will have a 'Contributor'
    role with access to a storage account.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity
        --scope /subscriptions/99999999-1bf0-4dda-
        aec3-cb9272f09590/MyResourceGroup/myRG/providers/Microsoft.Storage/storageAccounts/storage1

    Create a container group with a user assigned identity.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity
        /subscriptions/mySubscriptionId/resourcegroups/myRG/providers/Microsoft.ManagedIdentity/user
        AssignedIdentities/myID

    Create a container group with both system and user assigned identity.
        az container create -g MyResourceGroup --name myapp --image myimage:latest --assign-identity
        [system] /subscriptions/mySubscriptionId/resourcegroups/myRG/providers/Microsoft.ManagedIden
        tity/userAssignedIdentities/myID

For more specific examples, use: az find "az container create"

